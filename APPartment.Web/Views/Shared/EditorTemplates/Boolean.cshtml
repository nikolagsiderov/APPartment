@model bool

<style type="text/css">
    .slider [type="checkbox"] {
        display: none;
    }

    .slider .toggle-label {
        display: block;
        width: 40px;
        height: 20px;
        position: relative;
        background: #ed495c;
        border-radius: 10px;
        transition: background 0.2s ease;
        cursor: pointer;
        margin-top: 15px;
    }

    .slider .toggle-label::before {
        content: '';
        display: block;
        width: 50%;
        height: 100%;
        background: #ffffff;
        border-radius: 50%;
        box-shadow: 0 0 0 1px #d1d1d1;
        position: absolute;
        left: 0;
        top: 0;
        transition: transform 0.2s ease-in-out;
    }

    .slider [type="checkbox"]:checked ~ .toggle-label {
        background: #93ed49;
    }

        .slider [type="checkbox"]:checked ~ .toggle-label::before {
            -webkit-transform: translateX(100%);
            transform: translateX(100%);
        }
</style>

<span>@ViewData.ModelMetadata.GetDisplayName()</span>
<div class="slider">
    @Html.CheckBoxFor(m => m, new { @class = "toggle-pill" })
    @Html.LabelFor(m => m, new { @class = "toggle-label" })
</div>
@Html.ValidationMessageFor(model => model, "", new { @class = "text-danger" })

<script>
    $('.toggle-label').html('');
</script>