@model IEnumerable<APPartment.UI.ViewModels.Base.GridItemViewModel>

@{
    var area = this.ViewContext.RouteData.Values["area"];
    var controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var action = this.ViewContext.RouteData.Values["action"].ToString();

    var areaName = string.Empty;

    if (area != null)
    {
        areaName = area.ToString();
    }
}

@using APPartment.UI.Attributes
@using System.ComponentModel.DataAnnotations

<div class="card shadow mb-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        @if (Model.Any())
                        {
                            var properties = Model.First().GetType().GetProperties()
                                .Where(p => p.IsDefined(typeof(GridFieldDisplayAttribute), true))
                                .Select(p => new
                                {
                                    DisplayName = p.GetCustomAttributes(typeof(DisplayAttribute), true).Any() ? p.GetCustomAttributes(typeof(DisplayAttribute), true).Cast<DisplayAttribute>().Single().Name : p.Name
                                });

                            @foreach (var property in properties)
                            {
                                <th>
                                    @property.DisplayName
                                </th>
                            }
                            <th>
                                Actions
                            </th>
                        }
                        else
                        {
                            var properties = typeof(GridItemViewModel).GetProperties()
                                .Where(p => p.IsDefined(typeof(GridFieldDisplayAttribute), true))
                                .Select(p => new
                                {
                                    DisplayName = p.GetCustomAttributes(typeof(DisplayAttribute), true).Any() ? p.GetCustomAttributes(typeof(DisplayAttribute), true).Cast<DisplayAttribute>().Single().Name : p.Name
                                });

                            @foreach (var property in properties)
                            {
                                <th>
                                    @property.DisplayName
                                </th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                @foreach (var property in item.GetType().GetProperties().Where(p => p.IsDefined(typeof(GridFieldDisplayAttribute), true)))
                                {
                                    var value = @property.GetValue(item);

                                    <td>@value</td>
                                }
                                <td>
                                    <a asp-action="Details" asp-route-id="@item.ID" class="no-underline"><button type="button" class="btn btn-outline-cyan btn-xs btn-icon"><i class="fas fa-info-circle"></i></button></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="~/js/grid.js"></script>
